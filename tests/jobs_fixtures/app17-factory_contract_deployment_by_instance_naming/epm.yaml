jobs:

- name: setStorageBase
  set:
      val: 5

- name: deployGSFactoryFactory
  deploy:
      contract: GSFactoryFactory.sol
      instance: all

- name: createGSFactory
  call:
      destination: $deployGSFactoryFactory
      function: create
      abi: GSFactoryFactory

#Double check created address
- name:  getGSFactoryAddr
  query-contract:
      destination: $deployGSFactoryFactory
      abi: GSFactoryFactory
      function: getLast

- name: assertFactoryAddr
  assert:
      key: $getGSFactoryAddr
      relation: eq
      val: $createGSFactory

# Now talking to the factory-created factory...
- name: createGSContract
  call:
      destination: $createGSFactory
      abi: GSFactory
      function: create

#Double check created address
- name:  getGSAddr
  query-contract:
      abi: GSFactory
      destination: $createGSFactory
      function: getLast

- name: assertAddr
  assert:
      key: $getGSAddr
      relation: eq
      val: $createGSContract

#Normal get set contract testing
- name: setStorage
  call:
      destination: $createGSContract
      function: set 
      data: 
        - $setStorageBase
      abi: GSContract

- name: queryStorage
  query-contract:
      destination: $createGSContract
      abi: GSContract
      function: get

- name: assertStorage
  assert:
      key: $queryStorage
      relation: eq
      val: $setStorageBase